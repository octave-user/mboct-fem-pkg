name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '18 19 * * *'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Install GNU/Octave
        run: |
           sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
           sudo apt-get update
           sudo apt-get build-dep octave
           sudo apt-get install octave liboctave-dev octave-nurbs \
           libsuitesparse-dev libarpack2-dev libmumps-seq-dev \
           libmetis-dev libnlopt-dev \
           trilinos-all-dev libopenmpi-dev libptscotch-dev libsuitesparse-dev libqrupdate-dev \
           libmkl-full-dev

      # Runs a single command using the runners shell
      - name: Install Gmsh
        run: |
           wget http://www.gmsh.info/bin/Linux/gmsh-4.8.4-Linux64.tgz
           tar -zxvf gmsh-4.8.4-Linux64.tgz
           sudo install gmsh-4.8.4-Linux64/bin/gmsh /usr/local/bin
           gmsh --version
      # Runs a set of commands using the runners shell
      - name: Install MBDyn
        run: |
          git clone -b develop https://public.gitlab.polimi.it/DAER/mbdyn.git
          pushd mbdyn
          ./bootstrap.sh
          ./configure --with-static-modules \
          --enable-octave \
          --disable-Werror CXXFLAGS="-Ofast -Wall -march=native -mtune=native" \
          CPPFLAGS="-I/usr/lib/x86_64-linux-gnu/openmpi/include -I/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/ompi/mpi/cxx -I/usr/include/trilinos -I/usr/include/suitesparse" \
          LDFLAGS="-L/usr/lib/x86_64-linux-gnu/hdf5/openmpi" \
          --with-arpack --with-umfpack --with-klu --with-arpack --with-lapack --without-metis --with-mpi --with-trilinos --with-pardiso --with-suitesparseqr --with-qrupdate
          make -j4
          popd
      - name: Install mboct-octave-pkg
        run: |
           git clone -b master https://github.com/octave-user/mboct-octave-pkg.git && \
           pushd mboct-octave-pkg && \
           sudo make CXXFLAGS="-Ofast -Wall -march=native" install_global && popd
      - name: Install mboct-numerical-pkg
        run: |
           git clone -b master https://github.com/octave-user/mboct-numerical-pkg.git && \
           pushd mboct-numerical-pkg && \
           sudo make CXXFLAGS="-Ofast -Wall -march=native" install_global && popd
      - name: Install mboct-mbdyn-pkg
        run: |
           git clone -b master https://github.com/octave-user/mboct-mbdyn-pkg.git && \
           pushd mboct-mbdyn-pkg && \
           sudo make CXXFLAGS="-Ofast -Wall -march=native" install_global && popd
      - name: Install the package
        run: sudo make -C $GITHUB_WORKSPACE CXXFLAGS="-Ofast -Wall -march=native" install_global

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
